// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NpuBackend.Data.Migrations
{
    [DbContext(typeof(NpuDbContext))]
    [Migration("20241101173654_MultipleElementScoreSystem")]
    partial class MultipleElementScoreSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NpuBackend.Domain.Models.Element", b =>
                {
                    b.Property<Guid>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ElementId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.NpuCreation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("NpuCreations");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.NpuCreationElement", b =>
                {
                    b.Property<Guid>("NpuCreationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ElementId")
                        .HasColumnType("uuid");

                    b.HasKey("NpuCreationId", "ElementId");

                    b.HasIndex("ElementId");

                    b.ToTable("NpuCreationElements");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.Score", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("NpuCreationId")
                        .HasColumnType("uuid");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "NpuCreationId");

                    b.HasIndex("NpuCreationId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.NpuCreationElement", b =>
                {
                    b.HasOne("NpuBackend.Domain.Models.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NpuBackend.Domain.Models.NpuCreation", "NpuCreation")
                        .WithMany("Elements")
                        .HasForeignKey("NpuCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("NpuCreation");
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.Score", b =>
                {
                    b.HasOne("NpuBackend.Domain.Models.NpuCreation", null)
                        .WithMany("Scores")
                        .HasForeignKey("NpuCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NpuBackend.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NpuBackend.Domain.Models.NpuCreation", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
