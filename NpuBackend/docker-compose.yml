version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: npu.postgres
    hostname: npu.postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - npu.postgres.network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  api:
    build:
      context: .
      dockerfile: NpuBackend.Api/Dockerfile
    container_name: npu.api
    hostname: npu.api
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__PostgreSQL: "Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD};"
      ConnectionStrings__BlobStorage: "${BLOB_STORAGE_CONNECTION_STRING}"
      JWT__Secret: "$${JWT_SECRET_KEY:secret_key_secret_key_secret_key_secret_key_secret_key_secret_key_secret_key}"
      AzureStorage__ContainerName: "${AZURE_STORAGE_CONTAINER_NAME}"
      AzureStorage__BaseUrl: "${AZURE_STORAGE_BASE_URL}"
    ports:
      - "5000:8080"
    depends_on:
      - postgres
    networks:
      - npu.postgres.network

volumes:
  postgres_data:

networks:
  npu.postgres.network:
